<?php

use Drupal\Core\Site\Settings;

/**
 * Implements hook_install().
 */
function symfony_mailer_lite_install($is_syncing) {
  if ($is_syncing) {
    return;
  }
  $settings = Drupal::configFactory()->getEditable('mailsystem.settings');
  $settings->set('modules.symfony_mailer_lite.none', [
    'formatter' => 'symfony_mailer_lite',
    'sender' => 'symfony_mailer_lite',
  ])->save();

  if (\Drupal::moduleHandler()->moduleExists('swiftmailer')) {
    // Upgrade Swiftmailer configuration to Drupal Symfony Mailer Lite.
    $message_settings = Drupal::configFactory()->getEditable('symfony_mailer_lite.message');
    $swiftmailer_message_settings = Drupal::configFactory()->getEditable('swiftmailer.message');
    if (!empty($swiftmailer_message_settings->get('content_type'))) {
      $message_settings->set('content_type', $swiftmailer_message_settings->get('content_type'));
      $message_settings->set('override', TRUE);
    }
    else {
      $message_settings->set('override', FALSE);
    }
    if (!empty($swiftmailer_message_settings->get('text_format'))) {
      $message_settings->set('text_format', $swiftmailer_message_settings->get('text_format'));
    }
    $message_settings->set('generate_plain', (bool) $swiftmailer_message_settings->get('generate_plain'));
    if (!empty($swiftmailer_message_settings->get('character_set'))) {
      $message_settings->set('character_set', $swiftmailer_message_settings->get('character_set'));
    }
    $message_settings->save();

    $symfony_mailer_lite_settings = Drupal::configFactory()->getEditable('symfony_mailer_lite.settings');
    $transport_storage = \Drupal::entityTypeManager()->getStorage('symfony_mailer_lite_transport');
    $swiftmailer_transport_settings = Drupal::configFactory()->getEditable('swiftmailer.transport');
    if ($swiftmailer_transport_settings->get('transport') === 'sendmail') {
      $transport_storage->create([
        'id' => 'sendmail',
        'label' => 'Sendmail',
        'plugin' => 'sendmail',
        'configuration' => [
          'query' => [
            'command' => $swiftmailer_transport_settings->get('sendmail_path') . ' -' . $swiftmailer_transport_settings->get('sendmail_mode'),
          ],
        ],
      ])->save();
      $symfony_mailer_lite_settings->set('default_transport', 'sendmail')
        ->save();
    }
    elseif ($swiftmailer_transport_settings->get('transport') === 'smtp') {
      $transport_storage->create([
        'id' => 'smtp',
        'label' => 'SMTP',
        'plugin' => 'smtp',
        'configuration' => [
          'host' => $swiftmailer_transport_settings->get('smtp_host'),
          'port' => $swiftmailer_transport_settings->get('smtp_port'),
          'user' => $swiftmailer_transport_settings->get('smtp_credentials.swiftmailer.username'),
          'pass' => $swiftmailer_transport_settings->get('smtp_credentials.swiftmailer.password'),
          'query' => [
            'verify_peer' => TRUE,
            'local_domain' => '',
            'restart_threshold' => NULL,
            'restart_threshold_sleep' => NULL,
            'ping_threshold' => NULL,
          ],
        ],
      ])->save();
      $symfony_mailer_lite_settings->set('default_transport', 'smtp')
        ->save();
    }
  }
}

/**
 * Add the default message settings.
 */
function symfony_mailer_lite_update_9001(&$sandbox) {
  // Add the default message settings.
  $message_settings = Drupal::configFactory()->getEditable('symfony_mailer_lite.message');
  if (empty($message_settings->get('content_type'))) {
    $message_settings->set('content_type', \Drupal\symfony_mailer_lite\Plugin\Mail\SymfonyMailer::FORMAT_PLAIN)
      ->set('text_format', '')
      ->set('generate_plain', TRUE)
      ->set('character_set', 'UTF-8')
      ->save();
  }
}

/**
 * Check for sendmail transport and provide configuration to add to settings.php if necessary.
 */
function symfony_mailer_lite_update_10001(&$sandbox) {
  $missing_commands = [];
  $allowed_commands = Settings::get('mailer_sendmail_commands', []);
  $transport_storage = \Drupal::entityTypeManager()->getStorage('symfony_mailer_lite_transport');
  /** @var \Drupal\symfony_mailer_lite\Entity\Transport[] $transports */
  $transports = $transport_storage->loadMultiple();
  foreach ($transports as $transport) {
    if ($transport->getPluginId() === 'sendmail') {
      $configuration = $transport->getConfiguration();
      if (!empty($configuration['query']['command'])) {
        $command = $transport->getConfiguration()['query']['command'] ?? '';
        if (!in_array($command, $allowed_commands, TRUE)) {
          $missing_commands[$command] = $command;
        }
      }
    }
  }
  if (empty($missing_commands)) {
    return;
  }
  $command_config_lines = [];
  foreach ($missing_commands as $command) {
    $command_config_lines[] = '$settings[\'mailer_sendmail_commands\'][] = \'' . $command. '\';';
  }
  $message = t('Symfony Mailer Lite now requires that Sendmail transports only use commands that are marked as
  allowed in settings.php. Your site has transports that will fail with the current version because the commands have
  not been marked as allowed. To correct this, add the following lines to your settings.php file:

@commands
', [
    '@commands' => \Drupal\Core\Render\Markup::create(implode(";\n  ", $command_config_lines)),
  ]);
  throw new \Exception($message);
}
